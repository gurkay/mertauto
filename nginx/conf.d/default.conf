# HTTP - redirect all requests to HTTPS (except for certbot challenges)
server {
    listen 80;
    listen [::]:80;
    server_name mertautogarage.com www.mertautogarage.com;
    
    # Certbot challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        try_files $uri =404;
    }

    # Temporarily serve content over HTTP (for SSL certificate generation)
    location / {
        proxy_pass http://nextjs-frontend:3000;
        proxy_cache_bypass $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# HTTPS - proxy requests to frontend and backend (DISABLED UNTIL SSL CERTS ARE OBTAINED)
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     http2 on;
#     server_name mertautogarage.com www.mertautogarage.com;
# 
#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/mertautogarage.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/mertautogarage.com/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/mertautogarage.com/chain.pem;
# 
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
#     add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;
# 
#     # Common proxy settings
#     proxy_http_version 1.1;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header X-Forwarded-Host $host;
#     proxy_set_header X-Forwarded-Port $server_port;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "upgrade";
# 
#     # Buffer and timeout settings
#     proxy_buffer_size 128k;
#     proxy_buffers 4 256k;
#     proxy_busy_buffers_size 256k;
#     proxy_connect_timeout 60s;
#     proxy_send_timeout 60s;
#     proxy_read_timeout 60s;
# 
#     # Frontend
#     location / {
#         proxy_pass http://nextjs-frontend:3000;
#         proxy_cache_bypass $http_upgrade;
#     }
# 
#     # NextAuth.js genel auth endpoint'leri (frontend tarafından işlenecek)
#     location ~ ^/api/auth/(providers|csrf|error|_log|session|callback|signout)(.*)$ {
#         proxy_pass http://nextjs-frontend:3000$request_uri;
#         proxy_cache_bypass $http_upgrade;
#     }
# 
#     # NextAuth.js genel generate endpoint'leri (frontend tarafından işlenecek)
#     location ~ ^/api/generate/ {
#         proxy_pass http://nextjs-frontend:3000$request_uri;
#         proxy_cache_bypass $http_upgrade;
#     }
# 
#     # Dashboard ve diğer korumalı sayfalar için doğrudan erişim sağla
#     location ~ ^/(dashboard|profile|settings)(.*)$ {
#         proxy_pass http://nextjs-frontend:3000$request_uri;
#         proxy_cache_bypass $http_upgrade;
#         
#         # Auth header ve cookie'leri aktarmak için
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_header Authorization;
#         proxy_pass_request_headers on;
#         
#         # NextAuth.js cookie'lerini iletmek için
#         proxy_cookie_path / /;
#         proxy_cookie_domain $host nextjs-frontend;
#     }
# 
#     # Backend kimlik doğrulama endpoint'leri (signin, signup)
#     location ~ ^/api/auth/(signin|signup|user)(.*)$ {
#         proxy_pass http://spring-backend:8080$request_uri;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_header Authorization;
# 
#         # CORS for authentication endpoints
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
#         add_header 'Access-Control-Allow-Origin' 'https://mertautogarage.com' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
# 
#         # Handle preflight requests
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'https://mertautogarage.com' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
#             add_header 'Access-Control-Max-Age' 1728000;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
#     }
# 
#     # Backend API routes
#     location /api/ {
#         proxy_pass http://spring-backend:8080/;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header Authorization $http_authorization;
#         proxy_pass_header Authorization;
# 
#         # CORS for API endpoints
#         add_header 'Access-Control-Allow-Origin' 'https://mertautogarage.com' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
# 
#         # Handle preflight requests
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' 'https://mertautogarage.com' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
#             add_header 'Access-Control-Max-Age' 1728000;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
# 
#         # Debug logs
#         error_log /var/log/nginx/backend_error.log debug;
#         access_log /var/log/nginx/backend_access.log;
#     }
# 
#     # Health check endpoint
#     location = /health {
#         access_log off;
#         add_header Content-Type text/plain;
#         return 200 "healthy\n";
#     }
# 
#     # Error pages
#     error_page 404 /404.html;
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }
